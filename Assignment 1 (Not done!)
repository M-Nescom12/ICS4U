"""
Author: 
Date:
...
"""

""" Imported Libraries """
import random #


""" Function 1 """
#
def isMagic(M): #

# Variable Dictionary for Function isMagic
  n = len(M) #
  mnum = sum(M[0]) #
  Nd = 0 #
  Id = 0 #
  
# Checking if square is magic 
  for a in range(len(M)): # looping
    Hsm = 0 #
    Vsm = 0 #
    for x in range(n): #
      Vsm += M[x][a]  #
      Hsm = sum(M[a]) #
    if Vsm != mnum or Hsm != mnum: #
      return False # 
    if sum(M[a]) != mnum: #
      return False #
    Nd = Nd + M[a][a] #
    Id = Id + M[a][n-a-1] #
  if Nd != mnum or Id != mnum: #
    return False #
  print("The magic number for this sqaures is",mnum) 
  # 
  return True #

""" Function 2 """
# 
def create1(N): #

# 
  while True: #
    for x in range(N): #
      rand = random.randint(1,x+1) #
      if rand in num: #
         pass #
      else: #
        num.append(rand) #
    if len(num) == (N): #
      break #
    
#   
  for i in range(N): #
    ln = [] #
    for n in range(len(num)): #
      x = ((n + (N-(2*i))) %N) #
      ln.append(num[x]) #
    M1.append(ln) #
  return M1 #

""" Function 3 """
#  
def create2(N): #
  arr = [] # 

#
  while True: #
    for x in range(N): #
      rand = random.randint(0,x+1) #
      if rand in mult: #
         pass #
      else: #
        mult.append(rand) #
    if len(mult) == (N): #
      break #
   #

#
  for i in range(len(mult)): #
    n = int(mult[i])*N #
    arr.append(n) #
  for i in range(N): #
    ln = [] #
    for n in range(len(arr)): #
      x = ((n+(N-(3*i)))%N) #
      ln.append(arr[x]) #
    M2.append(ln) #
  return M2 #

""" Function 4 """
#
def create3(sq1, sq2): #

#
  for i in range(len(sq1)): #
    arr = [] #
    for x in range(len(sq2)): #
      a = sq1[i][x] + sq2[i][x] #
      arr.append(a) #
    M3.append(arr) #
  return M3 #
  
""" Function 5 """
#
def magic_sum(N): #
  return (N * (N**2 + 1)) / 2 #


""" Global Variable Dictionary """
usr = input("Please enter a prime number between 5 and 19:") 
#
pri = 0 #
num = [] #
mult = [] #
M1 = [] #
M2 = [] #
M3 = [] #
  
  
""" Taking and Validating Input """
#
try: #
    usr = int(usr) #
    if isinstance(usr, int): #
      usr = int(usr) #
except ValueError: #
    print("You did not enter an integer...") #
    exit() #
    
#
if 4 < usr < 20: #
  for n in range(usr): #
    n = n +1 #
    if (usr%n) == 0: #
      pri = pri + 1 #
  if pri != 2: #
    print("That is not a prime number!") #
    exit() #
else: #
  print("You did not enter a number in the given range...") #
  exit() #


""" Proving the Formula and Engaging User """
print("The magic sum using the fromula is:", (magic_sum(usr)))
#
yes = input("Would you like to see for yourself? (Yes/No)")
#
if yes == 'No' or yes == 'no': #
  exit() #


""" Outputting Matricies and Their Magic Sum"""
for x in range(len(create1(usr))): #
  print(M1[x]) #
if (isMagic(M1)) == True: #
  print("It is a magic square!") #

for x in range(len(create2(usr))): #
  print(M2[x]) #
if (isMagic(M2)) == True: #
  print("It is a magic square!") #
    
for x in range(len(create3(M1, M2))): #
  print(M3[x]) #
if (isMagic(M3)) == True: #
  print("It is a magic square!") #
  
